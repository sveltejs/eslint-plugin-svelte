- message: Store callbacks must use `set` param.
  line: 4
  column: 18
  suggestions:
    - desc: Add a `set` parameter.
      messageId: addParam
      output: |
        <script>
        	import { readable, writable } from 'svelte/store';

        	readable(false, (set) => true);
        	readable(false, (foo) => true);

        	writable(false, () => true);
        	writable(false, (foo) => true);

        	readable(false, (foo) => {
        		foo;
        		insideACallback(() => {
        			foo;
        		});
        		conflictingName(() => {
        			const foo = 303;
        			foo;
        		});
        	});

        	readable(false, () => {
        		const set = 303;
        	});

        	insideACallback(() => {
        		const set = 303;
        		readable(false, () => {
        			set;
        		});
        	});
        </script>
- message: Store callbacks must use `set` param.
  line: 5
  column: 18
  suggestions:
    - desc: Rename parameter from foo to `set`.
      messageId: updateParam
      output: |
        <script>
        	import { readable, writable } from 'svelte/store';

        	readable(false, () => true);
        	readable(false, (set) => true);

        	writable(false, () => true);
        	writable(false, (foo) => true);

        	readable(false, (foo) => {
        		foo;
        		insideACallback(() => {
        			foo;
        		});
        		conflictingName(() => {
        			const foo = 303;
        			foo;
        		});
        	});

        	readable(false, () => {
        		const set = 303;
        	});

        	insideACallback(() => {
        		const set = 303;
        		readable(false, () => {
        			set;
        		});
        	});
        </script>
- message: Store callbacks must use `set` param.
  line: 7
  column: 18
  suggestions:
    - desc: Add a `set` parameter.
      messageId: addParam
      output: |
        <script>
        	import { readable, writable } from 'svelte/store';

        	readable(false, () => true);
        	readable(false, (foo) => true);

        	writable(false, (set) => true);
        	writable(false, (foo) => true);

        	readable(false, (foo) => {
        		foo;
        		insideACallback(() => {
        			foo;
        		});
        		conflictingName(() => {
        			const foo = 303;
        			foo;
        		});
        	});

        	readable(false, () => {
        		const set = 303;
        	});

        	insideACallback(() => {
        		const set = 303;
        		readable(false, () => {
        			set;
        		});
        	});
        </script>
- message: Store callbacks must use `set` param.
  line: 8
  column: 18
  suggestions:
    - desc: Rename parameter from foo to `set`.
      messageId: updateParam
      output: |
        <script>
        	import { readable, writable } from 'svelte/store';

        	readable(false, () => true);
        	readable(false, (foo) => true);

        	writable(false, () => true);
        	writable(false, (set) => true);

        	readable(false, (foo) => {
        		foo;
        		insideACallback(() => {
        			foo;
        		});
        		conflictingName(() => {
        			const foo = 303;
        			foo;
        		});
        	});

        	readable(false, () => {
        		const set = 303;
        	});

        	insideACallback(() => {
        		const set = 303;
        		readable(false, () => {
        			set;
        		});
        	});
        </script>
- message: Store callbacks must use `set` param.
  line: 10
  column: 18
  suggestions:
    - desc: Rename parameter from foo to `set`.
      messageId: updateParam
      output: |
        <script>
        	import { readable, writable } from 'svelte/store';

        	readable(false, () => true);
        	readable(false, (foo) => true);

        	writable(false, () => true);
        	writable(false, (foo) => true);

        	readable(false, (set) => {
        		set;
        		insideACallback(() => {
        			set;
        		});
        		conflictingName(() => {
        			const foo = 303;
        			foo;
        		});
        	});

        	readable(false, () => {
        		const set = 303;
        	});

        	insideACallback(() => {
        		const set = 303;
        		readable(false, () => {
        			set;
        		});
        	});
        </script>
- message: Store callbacks must use `set` param.
  line: 21
  column: 18
  suggestions: null
- message: Store callbacks must use `set` param.
  line: 27
  column: 19
  suggestions: null
